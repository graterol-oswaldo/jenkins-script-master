pipeline {
  agent any

  options {
    timeout(time: 2, unit: 'MINUTES')
  }

  environment {
    ARTIFACT_ID = "0graterol/webapp:${env.BUILD_NUMBER}"
    SERVER_IP = '192.168.1.33'
    SERVER_USER = 'ograterol'
  }

  stages {
    stage('Build') {
      steps {
        script {
          dir("webapp") {
            dockerImage = docker.build "${env.ARTIFACT_ID}"
          }
        }
      }
    }
    stage('Run tests') {
      steps {
        sh "docker run ${dockerImage.id} npm test"
      }
    }
    stage('Publish') {
      when {
        branch 'master'
      }
      steps {
        script {
          docker.withRegistry("", "dockerhubcredentials") {
            dockerImage.push()
          }
        }
      }
    }
    // stage('Schedule Staging Deployment') {
    //   when {
    //     branch 'master'
    //   }
    //   steps {
    //     build job: 'deploy-webapp-staging', parameters: [string(name: 'ARTIFACT_ID', value: "${env.ARTIFACT_ID}")], wait: false
    //   }
    // }

    stage('Deploy') {
        when {
            expression {
                return currentBuild.result == null || currentBuild.result == 'SUCCESS'
            }
        }
        steps {
            script {
                // Deploy to the Linux server
                sshagent(credentials: ['SSH_LOCAL_LAB']) {
                    sh """
                    ssh ${SERVER_USER}@${SERVER_IP} '
                    cd /home/ograterol/projects/jenkins-script-master/webapp &&
                    git pull origin master &&
                    docker stop webapp &&
                    docker build -t 0graterol/webapp:${env.ARTIFACT_ID} . &&
                    docker run --name webapp -d -p 3000:3000 0graterol/webapp:${env.ARTIFACT_ID}
                    '
                    """
                }
            }
        }
    }

  }
}

